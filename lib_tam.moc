asm("
    CALL (LB) f_main
    HALT
")

//
// print functions
//

void print_char(char c) {
    asm("
        LOAD (1) %c
        SUBR Cout
    ");
}

void print(char* str) {
    while(*str != '\0') {
        print_char(*str);
        str = str + 1;
    }
}

void println(char* str) {
    print(str);
    print_char('\n');
}

void print_int(int i) {
    asm("
        LOAD (1) %i
        SUBR IOut
    ");
}

//
// manage memory
//

void* malloc(int size) {
    asm("
        LOAD (1) %size
        SUBR MAlloc
        RETURN (1) 1
    ");
}

void free(void* p) {
    // SUBR MFree doesn't work
}

void memcpy(char* dest, char* src, int n) {
    while(n > 0) {
        *dest = *src;
        src = src + 1;
        dest = dest + 1;
        n = n - 1;
    }
}

//
// misc.
//

int atoi(char* str) {
    int x = 0;

    while(*str != '\0') {
        if((*str < '0') || (*str > '9')) {
            return -1;
        }

        x = 10 * x + (int)(*str) - (int)'0';
        str = str + 1;
    }

    return x;
}

void strcpy(char* dest, char* src) {
    while(*src != '\0') {
        *dest = *src;
        src = src + 1;
        dest = dest + 1;
    }
}

int strlen(char* str) {
    int x = 0;

    while(*str != '\0') {
        x = x + 1;
        str = str + 1;
    }

    return x;
}
